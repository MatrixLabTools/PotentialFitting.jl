var documenterSearchIndex = {"docs":
[{"location":"exampleusecase/#Overview-of-example-use-1","page":"Example Use Case","title":"Overview of example use","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"This is an example workflow for doing the whole calculation, except calculating potential itself that has been explained else where.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Molecular dynamics itself consist of 4 phases:","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Equilibration of initial geometry in gas phase\nCondensing gas to solid.\nEquilibration to DFT\nSpectrum calculation","category":"page"},{"location":"exampleusecase/#Fitting-Potential-1","page":"Example Use Case","title":"Fitting Potential","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"First we need to fit a potential. In this example we fit a potential for trans-formic acid and argon. PotentialDB has pre calculated data than we can use for fitting the potential.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"using PotentialDB\nr = defaultregistry()\ndata = loadpotential(r, \"4\")","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"The fitting procedure is the same as explained in Usage section.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"First we create a potential for fitting.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"using PotentialFitting, PotentialCalculation\n\nm1=MoleculeIdenticalInformation{AtomOnlySymbol}(data[\"cluster1\"].atoms)\nm2=MoleculeIdenticalInformation{AtomOnlySymbol}(data[\"cluster2\"].atoms)\n\nmpp = MoleculePairPotential(m1,m2, GeneralPowers(-6,-8,-10,-12,-7,-9,-11))","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Then we prepare fitting data and apply some constrains. The reason why we applying constrains is that our potential is under fitting and as a result depends heavily on the constrains. You can verify this, by taking constrains off and comparing to constrained potential, or by changing the constrains considerably.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"fdata = FitData(mpp, data[\"Points\"], data[\"Energy\"])\n\nsetweight_e_more!(fdata, 0.1, 1000)\nsetweight_e_more!(fdata, 0.01, 5000)\nsetweight_e_less!(fdata, 2, -50)\nsetweight_e_less!(fdata, 4, -75)\nsetweight_e_less!(fdata, 16, -100);\n\nnothing # hide","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Then we prepare fitting tools for fitting. Linear regression is most likely good enough. But you can also try support vector machines or ridge regression etc.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"using ScikitLearn\n@sk_import linear_model: LinearRegression\n\nmodel = LinearRegression(fit_intercept=false)","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Fitting potential.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"fit_potential!(model, mpp, fdata)","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Check root mean square deviation for potential.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"rmsd(data[\"Points\"], data[\"Energy\"], mpp, emax=-10)","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"note: Note\nWe are under fitting our potential, so we can safely compare the potential to the data we used for fitting. But it would be a good idea to confirm this, by comparing to some data that was not used for fitting.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"To inspect the potential we can use use plot_compare which will calculate potential for given points. Here we visualize one line from potential.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"plot_compare(data[\"Points\"][:,30], data[\"Energy\"][:,30], mpp, leg=true)","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"scan_compare-command is also available and usually much faster to visualize the fit.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"scan_compare(data[\"Points\"], data[\"Energy\"], mpp, leg=true)","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"If you found a place in the potential that is not well fitted and want to know where it is, you can visualize it. There are two options","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"scan_visualize Uses Bio3DView and needs IJulia (Jupyter notebook) or Blink to work.\nvisualize_points This calls external program (defaults to VMD) for visualizations. Does not work with IJulia.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"To call them use","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"scan_visualize(data[\"Points\"])","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"# Visualize line 32 using vmd\nvisualize_points(data[\"Points\"][:,32], command=\"vmd\")","category":"page"},{"location":"exampleusecase/#Preparing-CP2K-input-files-1","page":"Example Use Case","title":"Preparing CP2K input files","text":"","category":"section"},{"location":"exampleusecase/#Geometry-inputs-1","page":"Example Use Case","title":"Geometry inputs","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"First grab your favorite and make two file, one for the molecule/cluster you are studying and one for matrix and save them in PDB-format. Here we have a file for formic acid and an other for argon.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"COMPND    UNNAMED\nAUTHOR    GENERATED BY OPEN BABEL 2.3.2\nHETATM    1  C   tfa     1      42.585  42.840  42.933  1.00  0.00           C\nHETATM    2  Oh  tfa     1      43.930  42.838  42.829  1.00  0.00           O\nHETATM    3  Oo  tfa     1      42.014  43.738  43.531  1.00  0.00           O\nHETATM    4  Ho  tfa     1      44.463  43.543  43.222  1.00  0.00           H\nHETATM    5  Hc  tfa     1      42.008  42.039  42.484  1.00  0.00           H\nCONECT    1    2    3    5                                            \nCONECT    2    1    4                                                 \nCONECT    3    1                                                      \nCONECT    4    2                                                      \nCONECT    5    1                                                      \nMASTER        0    0    0    0    0    0    0    0    5    0    5    0\nEND","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"COMPND    UNNAMED\nAUTHOR    GENERATED BY OPEN BABEL 2.3.2\nHETATM    6 AR   LIG     2       1.472  80.636  12.825  1.00  0.00           Ar\nMASTER        0    0    0    0    0    0    0    0    1    0    1    0\nEND","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"note: Note\nYou need to have different residue names for QM and MM atoms, here \"tfa\" (trans-formic acid) and \"LIG\". This is demanded by CP2K.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"You also need to put different identifiers to atoms at this point. Here we have:","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Oh : hydroxyl group oxygen\nOo : carbonyl group oxygen\nHo : hydroxyl group hydrogen\nHc : hydrogen connected to carbon","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Next we need to decide initial simulation box size, which depends on number of atoms in simulation. If we have 1000 argon atoms then good initial box size is 86 Å. To put the molecule in box we need extra tools. Gromacs in example has that kind of tools.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"To to put the molecule into the box we use gmx editconf command","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"gmx editconf -f tfa.pdb -box 8.6 8.6 8.6 -o tfa-b86.pdb","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Next we need to add argon atoms into the box. For this we use gmx insert-molecules command","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"gmx insert-molecules -f tfa-b86.pdb -ci ar.pdb -nmol 1000 -o tfa-ar.pdb","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"And now we have the final geometry input.","category":"page"},{"location":"exampleusecase/#CP2K-input-file-1","page":"Example Use Case","title":"CP2K input file","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"The best way to make CP2K input file is to split the file to several parts and using @include-commands to gather them to one file.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"To do this we make","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"MM-potential file\nQM-calculation file\nQMMM-boundary file\nCP2K file to gather","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"First we make the MM-potential file.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"&MM\n    &FORCEFIELD\n      &CHARGE\n         ATOM Ar\n         CHARGE 0.0\n      &END CHARGE\n      &CHARGE\n         ATOM C\n         CHARGE 0.0\n      &END CHARGE\n      &CHARGE\n         ATOM Oo\n         CHARGE 0.0\n      &END CHARGE\n      &CHARGE\n         ATOM Ho\n         CHARGE 0.0\n      &END CHARGE\n      &CHARGE\n         ATOM Hc\n         CHARGE 0.0\n      &END CHARGE\n      &CHARGE\n         ATOM Oh\n         CHARGE 0.0\n      &END CHARGE\n\n      IGNORE_MISSING_CRITICAL_PARAMS .TRUE.\n      &NONBONDED\n        # Argon-argon potential from http://www.sklogwiki.org/SklogWiki/index.php/Argon\n        &LENNARD-JONES\n          ATOMS Ar Ar\n          EPSILON [K_e] 125.7\n          SIGMA [angstrom] 3.345\n          RCUT [angstrom] 9.0\n        &END LENNARD-JONES\n\n        # trans Formic acid - argon\n        # Just copy the potential terms from potential fit here\n        &GENPOT\n            atoms Ar C\n            FUNCTION Cvi/(r^6) + Cviii/(r^8) + Cx/(r^10) +  Cxii/(r^12) + Cvii/(r^7) + Cix/(r^9) + Cxi/(r^11)\n            VARIABLES r\n            PARAMETERS Cvi Cviii Cx Cxii Cvii Cix Cxi\n            VALUES -22540.021633788096  -5.243549409354186e6  -3.2406578590178587e7  1.515360096536201e8  551050.9077903178  2.266474955203762e7  -5.3132065936126545e7\n            RCUT [angstrom] 9.0\n        &END GENPOT\n        &GENPOT\n            atoms Ar Oh\n            FUNCTION Cvi/(r^6) + Cviii/(r^8) + Cx/(r^10) +  Cxii/(r^12) + Cvii/(r^7) + Cix/(r^9) + Cxi/(r^11)\n            VARIABLES r\n            PARAMETERS Cvi Cviii Cx Cxii Cvii Cix Cxi\n            VALUES 13739.083360114846  5.471838619459709e6  1.6957303994470203e8  3.7516840650039065e8  -416048.44688283757  -3.998370403083761e7  -3.898432560739321e8\n            RCUT [angstrom] 9.0\n        &END GENPOT\n        &GENPOT\n            atoms Ar Oo\n            FUNCTION Cvi/(r^6) + Cviii/(r^8) + Cx/(r^10) +  Cxii/(r^12) + Cvii/(r^7) + Cix/(r^9) + Cxi/(r^11)\n            VARIABLES r\n            PARAMETERS Cvi Cviii Cx Cxii Cvii Cix Cxi\n            VALUES 9793.326640804324  3.1394020151115586e6  7.627842607574251e7  1.3069576949556419e8  -268179.8831127547  -2.0305102118835907e7  -1.550294791017888e8\n            RCUT [angstrom] 9.0\n        &END GENPOT\n        &GENPOT\n            atoms Ar Ho\n            FUNCTION Cvi/(r^6) + Cviii/(r^8) + Cx/(r^10) +  Cxii/(r^12) + Cvii/(r^7) + Cix/(r^9) + Cxi/(r^11)\n            VARIABLES r\n            PARAMETERS Cvi Cviii Cx Cxii Cvii Cix Cxi\n            VALUES -2432.1617929808244  -633286.4451121971  -1.042711058845794e7  -1.070334816166878e7  60921.18782589104  3.4584354851854523e6  1.6481702154332923e7\n            RCUT [angstrom] 9.0\n        &END GENPOT\n        &GENPOT\n            atoms Ar Hc\n            FUNCTION Cvi/(r^6) + Cviii/(r^8) + Cx/(r^10) +  Cxii/(r^12) + Cvii/(r^7) + Cix/(r^9) + Cxi/(r^11)\n            VARIABLES r\n            PARAMETERS Cvi Cviii Cx Cxii Cvii Cix Cxi\n            VALUES 4525.254249630937  858980.4449115618  7.2762912659367565e6  -3.2064841129619866e6  -99340.84352925561  -3.6312235927495877e6  -4.349257632528463e6\n            RCUT [angstrom] 9.0\n        &END GENPOT\n\n      &END NONBONDED\n\n    &END FORCEFIELD\n    &POISSON\n      PERIODIC XYZ\n      # CP2K needs ewald summation section in input. But for us it is useless,\n      # and you can but whatever values here.\n      &EWALD\n        EWALD_TYPE spme\n        ALPHA .44\n        GMAX  40\n      &END EWALD\n    &END POISSON\n\n  &END MM","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Then we make a QM-file with semi-empirical calculation method to condense the system. Here we use AM1-method that is fine for formic acid.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"&DFT\n    BASIS_SET_FILE_NAME ${LIBDIR}/BASIS_MOLOPT\n    POTENTIAL_FILE_NAME ${LIBDIR}/POTENTIAL\n    &MGRID\n      NGRIDS 4\n      CUTOFF 350\n      REL_CUTOFF 50\n    &END MGRID\n\n    &QS\n       # We use semi-empirical to condence the system\n       METHOD AM1\n       &SE\n         &COULOMB\n           CUTOFF [angstrom] 10.0\n         &END\n         &EXCHANGE\n           CUTOFF [angstrom] 10.0\n         &END\n      &END\n    &END\n\n    &SCF\n      SCF_GUESS ATOMIC\n      EPS_SCF 1.0E-6         # convergence threshold for total energy\n      MAX_SCF 30\n      &OUTER_SCF\n        MAX_SCF 10\n        EPS_SCF 1.0E-6\n      &END\n    &END SCF\n\n    # Our QM-box is non periodic, so we need a Poison-solver\n    &POISSON\n      POISSON_SOLVER MT\n      PERIODIC NONE\n    &END POISSON\n\n&END DFT\n","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"and a second file for DFT. We use BLYP-D3BJ here.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"&DFT\n    BASIS_SET_FILE_NAME ${LIBDIR}/BASIS_MOLOPT\n    POTENTIAL_FILE_NAME ${LIBDIR}/POTENTIAL\n    &MGRID\n      NGRIDS 4\n      CUTOFF 350\n      REL_CUTOFF 50\n    &END MGRID\n\n    &QS\n       METHOD GPW\n       EPS_DEFAULT 1.0E-10\n       EXTRAPOLATION ASPC\n    &END\n\n\n    &SCF\n      SCF_GUESS ATOMIC\n      EPS_SCF 1.0E-6         # convergence threshold for total energy\n      MAX_SCF 30\n      &OUTER_SCF\n        MAX_SCF 10\n        EPS_SCF 1.0E-6\n      &END\n    &END SCF\n\n    &XC\n      &XC_FUNCTIONAL BLYP\n      &END XC_FUNCTIONAL\n      &VDW_POTENTIAL\n         POTENTIAL_TYPE PAIR_POTENTIAL\n         &PAIR_POTENTIAL\n            TYPE DFTD3(BJ)\n            R_CUTOFF 16\n            REFERENCE_FUNCTIONAL BLYP\n            PARAMETER_FILE_NAME ${LIBDIR}/dftd3.dat\n         &END\n      &END\n    &END XC\n\n    &POISSON\n      POISSON_SOLVER MT\n      PERIODIC NONE\n    &END POISSON\n\n&END DFT","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Then we need to make the QM-MM file","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"&QMMM\n    CENTER_GRID TRUE\n\n    # For formic acid 10Å box is enough\n    &CELL                    \n      ABC [angstrom] 10 10 10\n      PERIODIC NONE\n    &END CELL\n\n    # Define QM atoms\n    &QM_KIND C\n      MM_INDEX 1\n    &END QM_KIND\n    &QM_KIND O\n      MM_INDEX 2 3\n    &END QM_KIND\n    &QM_KIND H\n      MM_INDEX 4 5\n    &END QM_KIND\n\n    # Apply periodic potential for MM system (default)\n    &PERIODIC\n      # We can turn multipole off, because argon has no partial charge\n      &MULTIPOLE OFF   \n      &END\n    &END PERIODIC\n\n&END QMMM","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"note: Note\nCENTER_GRID TRUE is very important option. Without it QM system will heat up on its own and calculations will fail.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Finally we make a file that gathers all the other files. The idea here is that you only need to edit this file in the future.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"@SET SYSTEM equilib\n@SET LIBDIR #add path to cp2k-data directory\n\n&GLOBAL\n  PROJECT ${SYSTEM}\n  PRINT_LEVEL LOW\n  RUN_TYPE MD\n&END GLOBAL\n\n&FORCE_EVAL\n  STRESS_TENSOR ANALYTICAL\n  METHOD QMMM\n\n  # These are the files we created previously\n  @include qm-am1.inc\n  @include mm.inc\n  @include qmmm.inc\n\n  &SUBSYS\n    &CELL                    # box containing the molecule: 15x15x15 Angstroms\n      ABC [angstrom] 86 86 86\n    &END CELL\n    &TOPOLOGY\n      COORD_FILE_NAME tfa-ar.pdb\n      COORD_FILE_FORMAT PDB\n      CONN_FILE_FORMAT USER\n      &GENERATE\n         &ISOLATED_ATOMS\n            # This need to span to all atoms in the simulation\n            # We don't have any unbreakable mm-bonds in simulation\n            LIST 1..1005\n         &END\n      &END\n    &END TOPOLOGY\n    &KIND Ho\n      BASIS_SET TZVP-MOLOPT-GTH\n      POTENTIAL GTH-BLYP-q1\n      ELEMENT H\n    &END KIND\n    &KIND H                  \n      BASIS_SET TZVP-MOLOPT-GTH\n      POTENTIAL GTH-BLYP-q1\n      ELEMENT H\n    &END KIND\n    &KIND Hc                 \n      BASIS_SET TZVP-MOLOPT-GTH\n      POTENTIAL GTH-BLYP-q1\n      ELEMENT H\n    &END KIND\n    &KIND Oh\n      BASIS_SET TZVP-MOLOPT-GTH\n      POTENTIAL GTH-BLYP-q6\n      ELEMENT O\n    &END KIND\n    &KIND Oo\n      BASIS_SET TZVP-MOLOPT-GTH\n      POTENTIAL GTH-BLYP-q6\n      ELEMENT O\n    &END KIND\n    &KIND O\n      BASIS_SET TZVP-MOLOPT-GTH\n      POTENTIAL GTH-BLYP-q6\n      ELEMENT O\n    &END KIND\n    &KIND C\n      BASIS_SET TZVP-MOLOPT-GTH\n      POTENTIAL GTH-BLYP-q4\n    &END KIND\n  &END SUBSYS\n\n&END FORCE_EVAL\n\n&MOTION\n\n    &MD\n        ENSEMBLE NVT\n        TEMPERATURE [K] 80\n        TEMP_TOL 50\n        TIMESTEP [fs] 0.5\n        STEPS 20000\n        &THERMOSTAT\n            REGION MASSIVE\n            TYPE CSVR\n            &CSVR\n              TIMECON [fs] 100\n            &END CSVR\n        &END THERMOSTAT\n    &END MD\n\n    &PRINT\n        &TRAJECTORY\n            &EACH\n                MD 20\n            &END EACH\n            FORMAT PDB\n        &END TRAJECTORY\n        &RESTART_HISTORY\n            &EACH\n                MD 5000\n            &END EACH\n        &END RESTART_HISTORY\n    &END PRINT\n\n&END MOTION\n","category":"page"},{"location":"exampleusecase/#Molecular-dynamics-1","page":"Example Use Case","title":"Molecular dynamics","text":"","category":"section"},{"location":"exampleusecase/#The-first-equilibration-1","page":"Example Use Case","title":"The first equilibration","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Aim here is to create a super cooled gas that will compress to solid/liquid in the next phase. To do this we need to set simulation temperature to lower than boiling point. For argon 80 K is a good temperature. This can be done with the input file that was constructed earlier.","category":"page"},{"location":"exampleusecase/#Condensing-1","page":"Example Use Case","title":"Condensing","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"To condense the system we need to change the dynamics to NTP, so that the external pressure will compress it. To do it we'll use following input file","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"@SET SYSTEM condence\n@SET LIBDIR # add path to cp2k-data directory\n\n&GLOBAL\n  PROJECT ${SYSTEM}\n  PRINT_LEVEL LOW\n  RUN_TYPE MD\n&END GLOBAL\n\n&FORCE_EVAL\n  STRESS_TENSOR ANALYTICAL\n  METHOD QMMM\n\n\n  @include qm-am1.inc\n  @include mm.inc\n  @include qmmm.inc\n\n  @include subsys.inc\n\n\n&MOTION\n\n    &MD\n        ENSEMBLE NPT_I\n        TEMPERATURE [K] 20\n        TIMESTEP [fs] 0.5\n        STEPS 200000\n        &THERMOSTAT\n            REGION MASSIVE\n            TYPE CSVR\n            &CSVR\n              TIMECON [fs] 250\n            &END CSVR\n        &END THERMOSTAT\n        &BAROSTAT\n             PRESSURE [bar] 1.0\n             TEMPERATURE [K] 20\n             TEMP_TOL [K] 20\n             TIMECON [fs] 250\n        &END BAROSTAT\n    &END MD\n\n    &PRINT\n        &TRAJECTORY\n            &EACH\n                MD 40\n            &END EACH\n            FORMAT PDB\n        &END TRAJECTORY\n        &RESTART_HISTORY\n            &EACH\n                MD 50000\n            &END EACH\n        &END RESTART_HISTORY\n    &END PRINT\n\n&END MOTION","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"note: Note\nThe rate at which the system condenses is heavily affected by thermostats coupling constant, here 250 fs. The system will condense slower, if the constant is smaller. 250 fs has proven to be a good value for many different systems.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"This input file has additional file subsys.inc that includes &SUBSYSTEM section form the previous run. You can get the section by using grep on restart file.","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"grep -A 10000 \"&SUBSYS\"","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"In this phase we also set the final temperature, now 20 K.","category":"page"},{"location":"exampleusecase/#Change-to-DFT-1","page":"Example Use Case","title":"Change to DFT","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"Next we'll change QM calculation method to DFT. To do this we'll use slightly modified input file from the previous phase","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"@SET SYSTEM dftequilib\n@SET LIBDIR # add path to cp2k-data directory\n\n&GLOBAL\n  PROJECT ${SYSTEM}\n  PRINT_LEVEL LOW\n  RUN_TYPE MD\n&END GLOBAL\n\n&FORCE_EVAL\n  STRESS_TENSOR ANALYTICAL\n  METHOD QMMM\n\n\n  @include qm-blyp-d3bj.inc\n  @include mm.inc\n  @include qmmm.inc\n\n  @include condensed_subsys.inc\n\n\n&MOTION\n\n    &MD\n        ENSEMBLE NPT_I\n        TEMPERATURE [K] 20\n        TIMESTEP [fs] 0.5\n\n        # You can increase this if needed\n        STEPS 10000\n        &THERMOSTAT\n            REGION MASSIVE\n            TYPE CSVR\n            &CSVR\n              # This constant is not that important anymore\n              TIMECON [fs] 25\n            &END CSVR\n        &END THERMOSTAT\n        &BAROSTAT\n             PRESSURE [bar] 1.0\n             TEMPERATURE [K] 20\n             TEMP_TOL [K] 20\n             TIMECON [fs] 250\n        &END BAROSTAT\n    &END MD\n\n    &PRINT\n        &TRAJECTORY\n            &EACH\n                MD 40\n            &END EACH\n            FORMAT PDB\n        &END TRAJECTORY\n        &RESTART_HISTORY\n            &EACH\n                MD 5000\n            &END EACH\n        &END RESTART_HISTORY\n    &END PRINT\n\n&END MOTION","category":"page"},{"location":"exampleusecase/#IR-spectrum-calculation-1","page":"Example Use Case","title":"IR spectrum calculation","text":"","category":"section"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"To calculate spectrum we need dipole moments, to do this we need to add command to print them to our QM-file","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"&DFT\n    BASIS_SET_FILE_NAME ${LIBDIR}/BASIS_MOLOPT\n    POTENTIAL_FILE_NAME ${LIBDIR}/POTENTIAL\n    &MGRID\n      NGRIDS 4\n      CUTOFF 350\n      REL_CUTOFF 50\n    &END MGRID\n\n    &QS\n       METHOD GPW\n       EPS_DEFAULT 1.0E-10\n       EXTRAPOLATION ASPC\n    &END\n\n\n    &SCF\n      SCF_GUESS ATOMIC\n      EPS_SCF 1.0E-6         # convergence threshold for total energy\n      MAX_SCF 30\n      &OUTER_SCF\n        MAX_SCF 10\n        EPS_SCF 1.0E-6\n      &END\n    &END SCF\n\n    &XC\n      &XC_FUNCTIONAL BLYP\n      &END XC_FUNCTIONAL\n      &VDW_POTENTIAL\n         POTENTIAL_TYPE PAIR_POTENTIAL\n         &PAIR_POTENTIAL\n            TYPE DFTD3(BJ)\n            R_CUTOFF 16\n            REFERENCE_FUNCTIONAL BLYP\n            PARAMETER_FILE_NAME ${LIBDIR}/dftd3.dat\n         &END\n      &END\n    &END XC\n\n    &POISSON\n      POISSON_SOLVER MT\n      PERIODIC NONE\n    &END POISSON\n\n    &PRINT\n      &MOMENTS\n       PERIODIC FALSE\n       &EACH\n         MD 1\n       &END\n       MAX_MOMENT 1\n       FILENAME =dipole.traj\n      &END MOMENTS\n     &END\n\n&END DFT","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"We'll also need to edit input file to change the mode to NVE","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"@SET SYSTEM spectrum\n@SET LIBDIR # add path to cp2k-data directory\n\n&GLOBAL\n  PROJECT ${SYSTEM}\n  PRINT_LEVEL LOW\n  RUN_TYPE MD\n&END GLOBAL\n\n&FORCE_EVAL\n  STRESS_TENSOR ANALYTICAL\n  METHOD QMMM\n\n\n  @include qm-blyp-d3bj-dipoles.inc\n  @include mm.inc\n  @include qmmm.inc\n\n  @include dft_subsys.inc\n\n\n&MOTION\n\n    &MD\n        ENSEMBLE NVE\n        TIMESTEP [fs] 0.5\n        STEPS 80000\n    &END MD\n\n    &PRINT\n        &TRAJECTORY\n            &EACH\n                MD 5\n            &END EACH\n            FORMAT PDB\n        &END TRAJECTORY\n        &RESTART_HISTORY\n            &EACH\n                MD 5000\n            &END EACH\n        &END RESTART_HISTORY\n    &END PRINT\n\n&END MOTION","category":"page"},{"location":"exampleusecase/#","page":"Example Use Case","title":"Example Use Case","text":"This will create dipole.traj-file that contains dipole moments. You can use IRSpectrum.jl to calculate IR-spectrum form the dipole trajectory file.","category":"page"},{"location":"reference/#PotentialFitting-1","page":"Reference","title":"PotentialFitting","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"CurrentModule = PotentialFitting","category":"page"},{"location":"reference/#Visualize-1","page":"Reference","title":"Visualize","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"Modules = [PotentialFitting.visualize]\nOrder   = [:function, :type, :macro]","category":"page"},{"location":"reference/#PotentialFitting.visualize.min_distance-Tuple{MoleculePairPotential,Any}","page":"Reference","title":"PotentialFitting.visualize.min_distance","text":"min_distance(mpp::MoleculePairPotential, points)\n\nGives minimum distance of molecules in mpp on given points. Used to help plotting.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.visualize.plot_compare-Tuple{Any,Any,Vararg{MoleculePairPotential,N} where N}","page":"Reference","title":"PotentialFitting.visualize.plot_compare","text":"plot_compare(points, energy, mpp::MoleculePairPotential...; emax=100, unit=\"cm^-1\",                       leg=false, size=(800,400), font=font(20))\n\nCompares fitted energy to calculated one.\n\nArguments\n\npoints  : array of Cluster where potential is plotted\nenergy  : calculated energy\nmpp::MoleculePairPotential...  : potentials to be fitted\nemax=100  : maximum energy in plot - cut all values with energy greater\nunit=\"cm^-1\"  : energy unit\nleg=false     : draw legend\nsize=(800,400)   : size of picture\nfont=font(20)    : font size\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.visualize.plot_potential-Tuple{Any,MoleculePairPotential}","page":"Reference","title":"PotentialFitting.visualize.plot_potential","text":"plot_potential(points, mpp::MoleculePairPotential; emax=100, unit=\"cm^-1\",                         leg=false, size=(800,400), font=font(20))\n\nPlots potential\n\nArguments\n\npoints  : array of Cluster where potential is plotted\nmpp::MoleculePairPotential  : potential\nemax=100  : maximum energy in plot - cut all values with energy greater\nunit=\"cm^-1\"  : energy unit\nleg=false     : draw legend\nsize=(800,400)   : size of picture\nfont=font(20)    : font size\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.visualize.scan_compare-Tuple{Any,Any,Vararg{Any,N} where N}","page":"Reference","title":"PotentialFitting.visualize.scan_compare","text":"scan_compare(points,energy, mppe...; emax=100, unit=\"cm^-1\",                       leg=false, fsize=(800,400))\n\nUse Interact to view potentials ineractively on different points.\n\nVisualization is done on collumn vise.\n\nArguments\n\npoints  : array of points, first dimension is displayd while second can be chosen\nenergy  : array of reference energy, first dimension is displayd while second can be chosen\nmppe... : MoleculePairPotential which are plotted\nemax=100  : maximum energy in plot - cut all values with energy greater\nunit=\"cm^-1\"  : energy unit\nleg=false     : draw legend\nsize=(800,400)   : size of picture\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.visualize.scan_visualize-Tuple{Any}","page":"Reference","title":"PotentialFitting.visualize.scan_visualize","text":"scan_vizualize(points; i=4, html=false)\n\nVisualize geometry of points interactively using Interact\n\nArguments\n\npoints  : array of points, first dimension is displayd while second can be chosen for index manipulation\ni=4     : row index at with visialization is done\nhtml=false : if true give output as string of html\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.visualize.visualize_point_bio3dview-Tuple{Cluster}","page":"Reference","title":"PotentialFitting.visualize.visualize_point_bio3dview","text":"visualizepointbio3dview(point::Cluster; html=false)\n\nVisualize point using Bio3DView. Can be used wit IJulia and on html\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.visualize.visualize_points-Tuple{Any}","page":"Reference","title":"PotentialFitting.visualize.visualize_points","text":"visualize_points(points; stdout=devnull, stderr=devnull, command=\"vmd\")\n\nVisualize using external program.\n\n\n\n\n\n","category":"method"},{"location":"reference/#Fit-1","page":"Reference","title":"Fit","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"Modules = [PotentialFitting.fit]\nOrder   = [:function, :type, :macro]","category":"page"},{"location":"reference/#PotentialFitting.fit.fit_potential!-Tuple{Any,MoleculePairPotential,FitData}","page":"Reference","title":"PotentialFitting.fit.fit_potential!","text":"fit_potential!(model, mpp::MoleculePairPotential, fdata::FitData)\n\nFits potential using given model\n\nArguments\n\nmodel                       : ScikitLearn model\nmpp::MoleculePairPotential  : potential\nfdata::FitData              : data used in fitting\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.fit.predict_potential-Tuple{Any,MoleculePairPotential,Any,Any}","page":"Reference","title":"PotentialFitting.fit.predict_potential","text":"predict_potential(model, mpp::MoleculePairPotential, cluster1, cluster2)\n\nUses model to predict potential on given cluster points\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.fit.predict_potential-Tuple{Any,MoleculePairPotential,Any}","page":"Reference","title":"PotentialFitting.fit.predict_potential","text":"predict_potential(model, mpp::MoleculePairPotential, points)\n\nUses model to predict potential on given points\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.fit.setweight_e_less!","page":"Reference","title":"PotentialFitting.fit.setweight_e_less!","text":"setweightemore!(data::FitData, w, e; unit=\"cm-1\")\n\nSets weigth when energy is more than given one.\n\nArguments\n\ndata::FitData  : data where weigth is adjusted\nw              : new weigth\ne              : energy\nunit=\"cm-1\"    : energy unit\n\n\n\n\n\n","category":"function"},{"location":"reference/#PotentialFitting.fit.setweight_e_more!-Tuple{FitData,Any,Any}","page":"Reference","title":"PotentialFitting.fit.setweight_e_more!","text":"setweightemore!(data::FitData, w, e; unit=\"cm-1\")\n\nSets weigth when energy is more than given one.\n\nArguments\n\ndata::FitData  : data where weigth is adjusted\nw              : new weigth\ne              : energy\nunit=\"cm-1\"    : energy unit\n\n\n\n\n\n","category":"method"},{"location":"reference/#StatsBase.rmsd-Tuple{Any,Any,MoleculePairPotential}","page":"Reference","title":"StatsBase.rmsd","text":"rmsd(points, energy, mpp::MoleculePairPotential; emax=0, unit=\"cm^-1\")\n\nCalculates root mean square error for potential mpp.\n\nAtributes\n\npoints                      : points where potential is tested\nenergy                      : referece energy for given points\nmpp::MoleculePairPotential  : potential\nemax=0                      : cut points where energy is larger than this\nunit=\"cm^-1\"                : unit for energy\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.fit.FitData","page":"Reference","title":"PotentialFitting.fit.FitData","text":"FitData\n\nStructure to help potential parameters fitting.\n\nFields\n\nvariables : variables\nE         : energy\nw         : weights\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialFitting.fit.give_as_potential-Tuple{Any,Any}","page":"Reference","title":"PotentialFitting.fit.give_as_potential","text":"giveaspotential(T, data)\n\nReturns MoleculePairPotential{T} from given data that must have \"c1_molecule\" and \"c2_molecule\" fields\n\n\n\n\n\n","category":"method"},{"location":"reference/#Potentials-1","page":"Reference","title":"Potentials","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"Modules = [PotentialFitting.potentials, PotentialFitting.lennardjones, PotentialFitting.generalpowers]\nOrder   = [:function, :type, :macro]","category":"page"},{"location":"reference/#PotentialFitting.potentials.calculate_potential-Tuple{AbstractPairPotential,AbstractCluster,Any}","page":"Reference","title":"PotentialFitting.potentials.calculate_potential","text":"calculate_potential(potential::AbstractPotential, cluster::AbstractCluster, indices)\n\nCalculates energy from given potential. Needs to be implemented for each potential.\n\nArguments\n\npotential::AbstractPairPotential  : potential\ncluster::AbstractCluster          : molecule cluster\nindices                           : indices for atoms that represent potential\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.potentials.get_potential!-Tuple{AbstractPotential,Any}","page":"Reference","title":"PotentialFitting.potentials.get_potential!","text":"get_potential!(potential, terms)\n\nFunction that sets potential term after potential has been fitted. That is this function transforms fitted term to potential terms. Needs to be implemented for each potential.\n\nArguments\n\npotential : used potential\nterms     : terms from fitting method\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.potentials.potential_variables-Tuple{MoleculePairPotential,Any}","page":"Reference","title":"PotentialFitting.potentials.potential_variables","text":"potential_variables(mpp::MoleculePairPotential, points)\n\nUsed to transform cluster data to fittable form.\n\nArguments\n\nmpp::MoleculePairPotential : potential to be fitted\npoints : array for clusters\n\nReturns\n\nArray holding an array for each potential term in mpp.topology that can the be used for fitting.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.potentials.AbstractClusterPotential","page":"Reference","title":"PotentialFitting.potentials.AbstractClusterPotential","text":"AbstractClusterPotential <: AbstractPotential\n\nPotentials between groups of atoms\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialFitting.potentials.AbstractPairPotential","page":"Reference","title":"PotentialFitting.potentials.AbstractPairPotential","text":"AbstractPairPotential  <: AbstractPotential\n\nPotential that depends only on distance between two atoms\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialFitting.potentials.ClusterPotentialTopology","page":"Reference","title":"PotentialFitting.potentials.ClusterPotentialTopology","text":"ClusterPotentialTopology{T} <: AbstractClusterPotentialTopology{T}\n\nContainer that maps a cluster potential to respective atoms.\n\nFields\n\npotential::T:\nindices::Vector{Vector{Int}}: Stores information of atoms between which the potentilal exist\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialFitting.potentials.MoleculePairPotential","page":"Reference","title":"PotentialFitting.potentials.MoleculePairPotential","text":"MoleculePairPotential{T<:AbstractPairPotential} <: AbstractClusterPotential\n\nStructure to hold potential information between two molecules\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialFitting.potentials.PairPotentialTopology","page":"Reference","title":"PotentialFitting.potentials.PairPotentialTopology","text":"PairPotentialTopology{T} <: AbstractPairPotentialTopology{T}\n\nContainer that maps a pair potential to respective atoms.\n\nFields\n\nindices::Vector{Tuple{Int, Int}}: Stores information of atom pair(s) between which the potentilal exist\npotential::T: Potential structure\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialFitting.potentials.PairPotentialTopology-Tuple{AbstractCluster,AbstractCluster}","page":"Reference","title":"PotentialFitting.potentials.PairPotentialTopology","text":"(p::PairPotentialTopology)(c1::AbstractCluster, c2::AbstractCluster)\n\nReturns potential for given cluster pair. Index for atom 2 is expected to be in cluster c2.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.potentials.PairPotentialTopology-Tuple{AbstractCluster}","page":"Reference","title":"PotentialFitting.potentials.PairPotentialTopology","text":"(p::PairPotentialTopology)(c::AbstractCluster)\n\nReturns potential for given cluster.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.potentials.PairPotentialTopology-Tuple{Any}","page":"Reference","title":"PotentialFitting.potentials.PairPotentialTopology","text":"(p::PairPotentialTopology)(r)\n\nReturns potential for given distance.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialFitting.lennardjones.LennardJones","page":"Reference","title":"PotentialFitting.lennardjones.LennardJones","text":"LennardJones <: AbstractPairPotential\n\nHolds constants for Lennard-Jones potential     E = C12/R^12 - C6/R^6\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialFitting.generalpowers.GeneralPowers","page":"Reference","title":"PotentialFitting.generalpowers.GeneralPowers","text":"GeneralPowers\n\nGeneral potential with customizable powers.\n\nFields\n\nconstants::Vector{Float64} : potential constants\npowers::Vector{Int}        : powers for radius\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialCalculation-1","page":"Reference","title":"PotentialCalculation","text":"","category":"section"},{"location":"reference/#Atoms-1","page":"Reference","title":"Atoms","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"Modules = [PotentialCalculation.atoms, PotentialCalculation.molecules]\nOrder = [:function, :type, :macro]","category":"page"},{"location":"reference/#PotentialCalculation.atoms.AtomOnlySymbol","page":"Reference","title":"PotentialCalculation.atoms.AtomOnlySymbol","text":"AtomOnlySymbol <: AbstractAtom\n\nAtom that only has symbol\n\nFields\n\nid::String : hold description of atom\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialCalculation.atoms.AtomWithMass","page":"Reference","title":"PotentialCalculation.atoms.AtomWithMass","text":"AtomWithMass <: AbstractAtomWithMass\n\nAtom that has symbol and mass\n\nFields\n\nid::String    : hold description of atom\nmass::Float64 : mass of atom\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialCalculation.molecules.makeidentical!-Tuple{MoleculeIdenticalInformation,Any}","page":"Reference","title":"PotentialCalculation.molecules.makeidentical!","text":"makeidentical!(Mol::MoleculeIdenticalInformation,x)\n\nAdds information for identical atoms to molecule.\n\nArguments\n\nMol::MoleculeIdenticalInformation : moleculet to which identical information is added\nx : collection of indices of identical atoms\n\nThrows\n\nError if x is out of bounds of Mol\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.molecules.Molecule","page":"Reference","title":"PotentialCalculation.molecules.Molecule","text":"Molecule{T<:AbstractAtom} <: AbstractMolecule\n\nMolecule representation\n\nField\n\natoms::Vector{T} : Contains information of atoms\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialCalculation.molecules.MoleculeIdenticalInformation","page":"Reference","title":"PotentialCalculation.molecules.MoleculeIdenticalInformation","text":"Molecule{T<:AbstractAtom} <: AbstractMolecule\n\nMolecule representation with information of identical atoms\n\nField\n\natoms::Vector{T} : Contains information of atoms\nidentical::Identical : identical atom information\n\n\n\n\n\n","category":"type"},{"location":"reference/#Base.push!-Tuple{MoleculeIdenticalInformation,Any}","page":"Reference","title":"Base.push!","text":"Base.push!(Mol::MoleculeIdenticalInformation,x)\n\nAdds information for identical atoms to molecule.\n\nDEPRECATED!!! - use makeidentical! instead\n\nArguments\n\nMol::MoleculeIdenticalInformation : moleculet to which identical information is added\nx : collection of indices of identical atoms\n\nThrows\n\nError if x is out of bounds of Mol\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.identical.areidentical-Tuple{MoleculeIdenticalInformation,Any}","page":"Reference","title":"PotentialCalculation.identical.areidentical","text":"areidentical(mol::MoleculeIdenticalInformation,x)\n\nChecks if atoms with indices given in collection x are identical\n\n\n\n\n\n","category":"method"},{"location":"reference/#Calculation-1","page":"Reference","title":"Calculation","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"Modules = [PotentialCalculation.calculators, PotentialCalculation.restarttools]\nOrder = [:function, :type, :macro]","category":"page"},{"location":"reference/#PotentialCalculation.calculators.bsse_corrected_energy-Tuple{Calculator{Orca},Any,Any}","page":"Reference","title":"PotentialCalculation.calculators.bsse_corrected_energy","text":"bsse_corrected_energy(cal::Calculator, c1, c2; basename=\"base\", id=\"\", pchannel=pchannel)\n\nCalculates energy of combined clusters taking into account basis set superposition error\n\nArguments\n\ncal::Calculator : calcualation information\nc1 : collection of clusters\nc2 : collection of clusters\nbasename=\"base\" : base name for input/ouput files\nid=\"\" : additional information for calculator - needed for multiprocessing in same folder\npchannel=undef  : (Remote)Channel where progess information is added\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.bsse_corrected_energy-Tuple{Calculator{Orca},Cluster,Cluster}","page":"Reference","title":"PotentialCalculation.calculators.bsse_corrected_energy","text":"bsse_corrected_energy(cal::Calculator, c1::Cluster, c2::Cluster; basename=\"base\", id=\"\", pchannel=pchannel)\n\nCalculates energy of combined cluster taking into account basis set superposition error\n\nArguments\n\ncal::Calculator : calcualation information\nc1::Cluster : cluster\nc2::Cluster : cluster\nbasename=\"base\" : base name for input/ouput files\nid=\"\" : additional information for calculator - needed for multiprocessing in same folder\npchannel=undef  : (Remote)Channel where progess information is added\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.calculate_energy-Tuple{Calculator{Orca},Any}","page":"Reference","title":"PotentialCalculation.calculators.calculate_energy","text":"calculate_energy(cal::Calculator, points; basename=\"base\", ghost=undef, id=\"\", pchannel=pchannel)\n\nCalculates energy for given clusters.\n\nArguments\n\ncal::Calculator : calculation information\npoints : collection of Cluster which energy is calculated\nbasename=\"base\" : base name for input/ouput files\nghost=undef : indices for atoms considered as ghost\nid=\"\" : additional information for calculator - needed for multiprocessing in same folder\npchannel=undef  : (Remote)Channel where progess information is added\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.calculate_energy-Tuple{Calculator{Orca},Cluster}","page":"Reference","title":"PotentialCalculation.calculators.calculate_energy","text":"calculate_energy(cal::Calculator, point::Cluster; basename=\"base\", ghost=undef, id=\"\", pchannel=pchannel)\n\nCalculates energy for given cluster.\n\nArguments\n\ncal::Calculator : calculation information\npoint::Cluster : cluster which energy is calculated\nbasename=\"base\" : base name for input/ouput files\nghost=undef : indices for atoms considered as ghost\nid=\"\" : additional information for calculator - needed for multiprocessing in same folder\npchannel=undef  : (Remote)Channel where progess information is added\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.clean_calculation_files-Tuple{}","page":"Reference","title":"PotentialCalculation.calculators.clean_calculation_files","text":"clean_calculation_files(;dir=\".\", basename=\"base\")\n\nDeletes files that calculations produced\n\nArguments\n\ndir=\".\" : directory to be cleaned\nbasename=\"base\" : base name used in calculations\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.getBSSEsteps-Tuple{PotentialCalculation.calculators.AbstractCalculationProgram}","page":"Reference","title":"PotentialCalculation.calculators.getBSSEsteps","text":"getBSSEsteps(cal::AbstractCalculationProgram)\n\nUsed to set up progressbar. Returns 1, if calculator program has a method to calculate counter poise correction with a single command and 3, if program needs to be called multiple times to make counter poise correction.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.read_energy-Tuple{Any}","page":"Reference","title":"PotentialCalculation.calculators.read_energy","text":"read_energy(fname)\n\nRead ORCA output for final energy. Throws an error if calculation failed.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.write_input-Tuple{IO,Calculator{Orca},AbstractClusterWithSymbols}","page":"Reference","title":"PotentialCalculation.calculators.write_input","text":"write_input(io::IO, cal::Calculator,\n                 c::AbstractClusterWithSymbols; ghost=undef)\n\nWrites input files for calculation program. Only ORCA input is supported now.\n\nArguments\n\nio::IO : stream where writing is done\ncal::Calculator : calculation information\nc::AbstractClusterWithSymbols : molecule cluster that is calculated\nghost=undef : collection for atom idexes that are considered ghost atoms\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.calculators.Calculator","page":"Reference","title":"PotentialCalculation.calculators.Calculator","text":"mutable struct Calculator\n\nStruct used to hold together different bits of information needed in calculations.\n\nFields\n\nmethod : calculation method informaton\nbasis : basis information\ncalculator : calculation program information\n\nExamples\n\njulia> Calculator{Orca}(\"method\", \"basis\")\nCalculator{Orca}(\"method\", \"basis\", Orca(\"orca\", 0x0000000000000001, 0x00000000000003e8, \"/tmp/tmpxEoJYW\"))\n\njulia> Calculator{Orca}(\"method\", \"basis\", Orca())\nCalculator{Orca}(\"method\", \"basis\", Orca(\"orca\", 0x0000000000000001, 0x00000000000003e8, \"/tmp/tmpVg959k\"))\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialCalculation.calculators.Orca","page":"Reference","title":"PotentialCalculation.calculators.Orca","text":"mutable struct Orca <: AbstractCalculationProgram\n\nHolds information of how to use ORCA program.\n\nNote that if you are using more than 1 core you need to specify exact path to orca executable.\n\nFields\n\nexecutable : path to \"orca\" executable - default = \"orca\"\nncore : number of cores used by orca - default = 1\nmaxmem : maximum memory per core for orca - default = 1000\ntmp_dir : directory where calculations are done - default = mktempdir()\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialCalculation.calculators.print_orca_xyz-Tuple{IO,AbstractClusterWithSymbols}","page":"Reference","title":"PotentialCalculation.calculators.print_orca_xyz","text":"printorcaxyz(io::IO, c::AbstractClusterWithSymbols; ghost=undef)\n\nPrints ORCA input style xyz input. Idexes in ghost are marked as ghost atoms.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.calculate_adaptive_sample_inputs-Tuple{Any}","page":"Reference","title":"PotentialCalculation.restarttools.calculate_adaptive_sample_inputs","text":"calculate_adaptive_sample_inputs(inputs; save_file_name=\"\", save_step=nworkers(), pbar=true)\n\nUses adaptive_line_sampler to inputs in distributed fashion\n\nArguments\n\ninputs : calculation inputs array (eg. from load_clusters_and_sample_input)\nsave_file_name : file where data saved\nsave_step=nworkers() : number of calculated items before data is saved\npbar=true : show progress bar\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.calculate_energy_for_xyzfile-Tuple{Any,Any}","page":"Reference","title":"PotentialCalculation.restarttools.calculate_energy_for_xyzfile","text":"calculate_energy_for_xyzfile(fname, cal; pbar=true)\n\nReads xyz-file and calculates energy of each point on it\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.calculate_with_different_method-Tuple{Any,Calculator}","page":"Reference","title":"PotentialCalculation.restarttools.calculate_with_different_method","text":"calculatewithdifferentmethod(fname, calculator::Calculator;                                      savefile=\"\", restartfile=\"\", pbar=true,                                      saveafter=nworkers())\n\nWith this function you can use already chosen points on to which to do energy calculation.\n\nArguments\n\nfname : name of save/restart file where points are read\ncalculatror::Calculator : calculator used for calculations\nsave_file=\"\" : save final results here, if not empty\nrestart_file=\"\" : save restarts here, if not empty\npbar=true : show progress bar\nsave_after=nworkers() : make restart file when given ammount of points is calculated\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.continue_calculation-Tuple{Any,Calculator}","page":"Reference","title":"PotentialCalculation.restarttools.continue_calculation","text":"continuecalculation(fname, calculator::Calculator; savefile=\"\", restartfile=\"\",                               saveafter=nworkers(),  pbar=true)\n\nRestarts calculation from given file\n\nArguments\n\nfname : file from which calculation is restarted\ncalculator::Calculator : calculator used in calculations\nsave_file : file where final results are saved, if given\nrestart_file : file where new restart information is saved, if given\nsave_after=nworkers() : make restart file when given ammount of points is calculated\npbar=true : show progress bar\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.load_clusters_and_make_input-Tuple{Cluster,Cluster,Any}","page":"Reference","title":"PotentialCalculation.restarttools.load_clusters_and_make_input","text":"loadclustersandmakeinput(cluster1::Cluster, cluster2::Cluster, calculator;                                       nlines=1, max_e=0, unit=\"cm-1\", npoints=10,                                       maxdis=9.0, sstep=0.1, startdistance=2.5)\n\nLoads cluster1 from xyz-file and returns them all as an Array that can then be used with calculate_adaptive_sample_inputs to calculate energy data. Differs from load_clusters_and_sample_input by taking every point from file\n\nArguments\n\ncluster1::Cluster : cluster1\ncluster2::Cluster : cluster2\nnlines : number of lines to be sampled in calculation\nmax_e : Point that is closest and has less energy than this will be starting point for a line\nunit : Unit in which max_e is given\nnpoints : Number of points in potential\nmaxdis : Maximum distance in potential calculation\nsstep : Search step size for adaptive search\nstartdistance : Distance from which adaptive seach is started\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.load_clusters_and_make_input-Tuple{String,Cluster,Any}","page":"Reference","title":"PotentialCalculation.restarttools.load_clusters_and_make_input","text":"loadclustersandmakeinput(cluster1::String, cluster2::Cluster, calculator, nsamples;                                       max_e=0, unit=\"cm-1\", npoints=10,                                       maxdis=9.0, sstep=0.1, startdistance=2.5)\n\nLoads cluster1 from xyz-file and returns them all as an Array that can then be used with calculate_adaptive_sample_inputs to calculate energy data. Differs from load_clusters_and_sample_input by taking every point from file\n\nArguments\n\ncluster1::String : file from where cluster1 is sampled\ncluster2::Cluster :  cluster2\nmax_e : Point that is closest and has less energy than this will be starting point for a line\nunit : Unit in which max_e is given\nnpoints : Number of points in potential\nmaxdis : Maximum distance in potential calculation\nsstep : Search step size for adaptive search\nstartdistance : Distance from which adaptive seach is started\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.load_clusters_and_sample_input-Tuple{String,Any,Any,Any}","page":"Reference","title":"PotentialCalculation.restarttools.load_clusters_and_sample_input","text":"loadclustersandsampleinput(fnamecluster1, cluster2, calculator, nsamples;                                       maxe=0, unit=\"cm-1\", npoints=10,                                       maxdis=9.0, sstep=0.1, startdistance=2.5)\n\nLoads cluster1 from xyz-file and takes nsamples samples of it and returns them as an Array that can then be used with calculate_adaptive_sample_inputs to calculate energy data\n\nArguments\n\ncluster1 : file from where cluster1 is sampled\ncluster2 : cluster2\nnsamples : number of samples taken from fname_cluster1\nmax_e : Point that is closest and has less energy than this will be starting point for a line\nunit : Unit in which max_e is given\nnpoints : Number of points in potential\nmaxdis : Maximum distance in potential calculation\nsstep : Search step size for adaptive search\nstartdistance : Distance from which adaptive seach is started\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.load_clusters_and_sample_input-Tuple{String,String,Any,Any}","page":"Reference","title":"PotentialCalculation.restarttools.load_clusters_and_sample_input","text":"function loadclustersandsampleinput(cluster1::String, cluster2::String, calculator, nsamples;                                       nlines=1, max_e=0, unit=\"cm-1\", npoints=10,                                       maxdis=9.0, sstep=0.1, startdistance=2.5)\n\nArguments\n\ncluster1 : file from where cluster1 is sampled\ncluster2 : file from where cluster2 is sampled\nnsamples : number of samples taken from fname_cluster1\nnlines : number of lines to be sampled in calculation\nmax_e : Point that is closest and has less energy than this will be starting point for a line\nunit : Unit in which max_e is given\nnpoints : Number of points in potential\nmaxdis : Maximum distance in potential calculation\nsstep : Search step size for adaptive search\nstartdistance : Distance from which adaptive seach is started\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.load_data_file-Tuple{Any}","page":"Reference","title":"PotentialCalculation.restarttools.load_data_file","text":"load_data_file(fname)\n\nLoads saved data\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.load_restart_file-Tuple{Any}","page":"Reference","title":"PotentialCalculation.restarttools.load_restart_file","text":"load_restart_file(fname)\n\nLoads restart information from file fname and adds to it key not_calculated, which holds information of which collumns of Points have not been calculated.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.write_restart_file-Tuple{Any,Calculator,Any,Any,Any,Any}","page":"Reference","title":"PotentialCalculation.restarttools.write_restart_file","text":"write_restart_file(fname, calculator, points, restart_energy, cluster1, cluster2)\n\nSaves restart information for energy calculation.\n\nArguments\n\nfname : name of restartfile\ncalculator::Calculator : calculator used in calculations\npoints : 2d array of point where to calculate energy\nenergy : energy for points that have been caculeted\ncluster1 : cluster1\ncluster2 : cluster2\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools.write_save_file-Tuple{Any,Calculator,Any,Any,Any,Any}","page":"Reference","title":"PotentialCalculation.restarttools.write_save_file","text":"write_save_file(fname, calculator, points, energy, cluster1, cluster2)\n\nSaves final information for energy calculation.\n\nArguments\n\nfname : name of restartfileusing PotentialCalculation\ncalculator::Calculator : calculator used in calculations\npoints : 2d array of point where to calculate energy\nenergy : energy for points that have been caculeted\ncluster1 : cluster1\ncluster2 : cluster2\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools._calculate_points-Tuple{Any,Any,Any}","page":"Reference","title":"PotentialCalculation.restarttools._calculate_points","text":"_calculate_points(cal, c1_points, c2_points; pchannel=undef)\n\nInternal helper function to ease use of distributed calculations. Users should call \"calculate_points\" instead.\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.restarttools._sample_and_calculate-Tuple{InputAdaptiveSampler}","page":"Reference","title":"PotentialCalculation.restarttools._sample_and_calculate","text":"_sample_and_calculate(inputs; pchannel=undef )\n\nInternal helper function to help implement distributed calculations\n\n\n\n\n\n","category":"method"},{"location":"reference/#Clusters-1","page":"Reference","title":"Clusters","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"Modules = [PotentialCalculation.clusters]\nOrder = [:function, :type, :macro]","category":"page"},{"location":"reference/#PotentialCalculation.clusters.center_cluster!-Tuple{AbstractCluster}","page":"Reference","title":"PotentialCalculation.clusters.center_cluster!","text":"center_cluster!(c::AbstractCluster)\n\nCenters cluster to origin of coordinates\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.center_coordinates-Tuple{AbstractCluster}","page":"Reference","title":"PotentialCalculation.clusters.center_coordinates","text":"center_coordinates(c::AbstractCluster)\n\nGives coordinates to aricmetric mean of clusters atoms\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.cluster_angle-Tuple{AbstractCluster,Any,Any,AbstractCluster,Any}","page":"Reference","title":"PotentialCalculation.clusters.cluster_angle","text":"cluster_angle(c1::AbstractCluster, i, j, c2::AbstractCluster, k)\n\nCalculates angle (radians) between atons in different clusters\n\nArguments\n\nc1::AbstractCluster : first cluster\ni : index in c1\nj : index in c1\nc2::AbstractCluster : second cluster\nk : index in c2\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.cluster_angle-Tuple{AbstractCluster,Any,Any,Any}","page":"Reference","title":"PotentialCalculation.clusters.cluster_angle","text":"cluster_angle(c::AbstractCluster, i, j, k)\n\nCalculates angle (radians) between atoms i,j,k in cluster\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.dihedral_angle-Tuple{AbstractCluster,Any,Any,Any,Any}","page":"Reference","title":"PotentialCalculation.clusters.dihedral_angle","text":"clusterdihedralangle(c::AbstractCluster, i, j, k, m)\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.distances-Tuple{AbstractCluster,AbstractCluster}","page":"Reference","title":"PotentialCalculation.clusters.distances","text":"distances(c1::AbstractCluster, c2::AbstractCluster)\n\nReturn distances between atoms of given clusters\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.distances-Tuple{AbstractCluster,AbstractUnitRange,AbstractCluster,AbstractUnitRange}","page":"Reference","title":"PotentialCalculation.clusters.distances","text":"distances(c1::AbstractCluster, ur1::AbstractUnitRange,\n          c2::AbstractCluster, ur2::AbstractUnitRange)\n\nReturn distance between atoms ur1 in c1 and atoms ur2 in c2\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.distances-Tuple{AbstractCluster,AbstractUnitRange,AbstractUnitRange}","page":"Reference","title":"PotentialCalculation.clusters.distances","text":"distances(c::AbstractCluster, ar1::AbstractRange, ar2::AbstractRange)\n\nReturns distances between atoms in given unit ranges\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.distances-Tuple{AbstractCluster,Any,AbstractCluster,Any}","page":"Reference","title":"PotentialCalculation.clusters.distances","text":"distances(c1::AbstractCluster, i, c2::AbstractCluster, j)\n\nReturn distance between atom i in c1 and atom j in c2\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.distances-Tuple{AbstractCluster,Any,Any}","page":"Reference","title":"PotentialCalculation.clusters.distances","text":"distances(c::AbstractCluster, i, j)\n\nReturns distance of atoms i and j\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.move!-Tuple{AbstractCluster,Any}","page":"Reference","title":"PotentialCalculation.clusters.move!","text":"move!(c::AbstractCluster,r)\n\nMoves cluster by r\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.print_xyz","page":"Reference","title":"PotentialCalculation.clusters.print_xyz","text":"print_xyz(io::IO, c::AbstractClusterWithSymbols, note=\"\"; printheader=true)\n\nPrints cluster in xyz file format\n\nArguments\n\nio::IO : stream where writing is done\nc::AbstractClusterWithSymbols : cluster that is writen\nnote=\"\" : message writen on note line\nprintheader=true : wheather or not header is writen (number of atoms and note)\n\n\n\n\n\n","category":"function"},{"location":"reference/#PotentialCalculation.clusters.rotate_x!-Tuple{AbstractCluster,Any}","page":"Reference","title":"PotentialCalculation.clusters.rotate_x!","text":"rotate_x!(c::AbstractCluster, θ)\n\nRotates cluster around x-axis by angle θ\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.rotate_y!-Tuple{AbstractCluster,Any}","page":"Reference","title":"PotentialCalculation.clusters.rotate_y!","text":"rotate_y!(c::AbstractCluster, θ)\n\nRotates cluster around y-axis by angle θ\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.rotate_z!-Tuple{AbstractCluster,Any}","page":"Reference","title":"PotentialCalculation.clusters.rotate_z!","text":"rotate_z!(c::AbstractCluster, θ)\n\nRotates cluster around z-axis by angle θ\n\n\n\n\n\n","category":"method"},{"location":"reference/#PotentialCalculation.clusters.Cluster","page":"Reference","title":"PotentialCalculation.clusters.Cluster","text":"Cluster{T<:AbstractAtom} <: AbstractClusterWithSymbols\n\nStructure to hold location data of clusters/molecules\n\nFields\n\nxyz::Array{Float64,2} : location of atoms in 3d space, first index is x, y, z coordinate\natoms::Vector{T} : atom type information\n\n\n\n\n\n","category":"type"},{"location":"reference/#PotentialCalculation.clusters.ClusterNoSymbols","page":"Reference","title":"PotentialCalculation.clusters.ClusterNoSymbols","text":"ClusterNoSymbols <: AbstractCluster\n\nBasic cluster has only location of atoms.\n\nFields\n\nxyz::Array{Float64,2} : location of atoms in 3d space, first index is x, y, z coordinate\n\n\n\n\n\n","category":"type"},{"location":"#PoentialFitting.jl-1","page":"Home","title":"PotentialFitting.jl Documentation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"PotentialCalculation, PotentialFitting and PotentialDB together form a group of packages that can be used to calculate, fit and store molecular potentials that can be used on QM-MM simulations of noble gas matrix isolation experiments.","category":"page"},{"location":"#[PotentialCalculation](https://github.com/MatrixLabTools/PotentialCalculation.jl)-Features-1","page":"Home","title":"PotentialCalculation Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Calculate potentials with ORCA or Psi4\nAutomatic sampling of calculation points\nSupports parallelisation of calculation across compute nodes\n","category":"page"},{"location":"#[PotentialFitting](https://github.com/MatrixLabTools/PotentialFitting.jl)-Features-1","page":"Home","title":"PotentialFitting Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Define new potentials easily\nFit potential using methods provided by ScikitLearn","category":"page"},{"location":"#[PotentialDB](https://github.com/MatrixLabTools/PotentialDB.jl)-Features-1","page":"Home","title":"PotentialDB Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Store computed data\nPublic storage to computed data\nEasily manage calculated potentials","category":"page"},{"location":"use/#Usage-1","page":"Fitting Potential","title":"Usage","text":"","category":"section"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"To calculate potential energy surface refer to PotentialCalculation.Ones you have potential energy calculated you can open it for fitting by using","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"using PotentialFitting, PotentialCalculation\n\n# There is an example potential in test/data directory\nusing PotentialDB\nr = defaultregistry()\ndata=loadpotential(r,\"4\")","category":"page"},{"location":"use/#Setting-up-Molecules-1","page":"Fitting Potential","title":"Setting up Molecules","text":"","category":"section"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"Next part in defining topology for the potential. This is started by creating two molecules. The information is in the loaded file.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"m1=MoleculeIdenticalInformation{AtomOnlySymbol}(data[\"cluster1\"].atoms)\nm2=MoleculeIdenticalInformation{AtomOnlySymbol}(data[\"cluster2\"].atoms)","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"If needed atoms can be flagged as identical.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"# Atoms 2 and 3 are identical\nmakeidentical!(m1, (2,3))","category":"page"},{"location":"use/#Potential-Topology-1","page":"Fitting Potential","title":"Potential Topology","text":"","category":"section"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"Next we need to define topology for the potential.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"mpp = MoleculePairPotential(m1,m2, LennardJones())","category":"page"},{"location":"use/#Finetuning-Potential-1","page":"Fitting Potential","title":"Finetuning Potential","text":"","category":"section"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"Alternatively potential can be tuned completely by adding potentials one by one.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"# Array where topology is saved\ntopo=[]\n\n#We can push potential to to this array one at the time\npush!(topo,\n      # Molecule 1 has 5 atoms so index 6 is molecule 2, or argon now\n      PairPotentialTopology(LennardJones(), 1,6)\n     )\nnothing # hide","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"If needed we can specify which atoms should be treated as identical, by adding information for it  in the topology.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"# Atoms 2 and 3 of molecule 1 have same potential to to atom 1 of molecule 2\npush!(topo,\n      PairPotentialTopology(LennardJones(), [(2,6), (3,6)])\n     )\nnothing # hide","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"If default form of potential is not enough it can be tuned, by giving it as an input.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"push!(topo,\n      PairPotentialTopology(GeneralPowers(-6,-12), 4,6)\n     )\npush!(topo,\n     PairPotentialTopology(GeneralPowers(-6,-8, -10, -12), 5,6)\n    )\nnothing # hide","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"Here we used general polynomial potential GeneralPowers to make customized polynomic potential.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"We can now create potential.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"mpp1=MoleculePairPotential(m1,m2)\nmpp1.topology = topo\n\nshow(mpp1)","category":"page"},{"location":"use/#Preparing-Data-for-Fitting-1","page":"Fitting Potential","title":"Preparing Data for Fitting","text":"","category":"section"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"To do fitting itself we need to prepare fit data.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"fdata = FitData(mpp, data[\"Points\"], data[\"Energy\"])\nnothing # hide","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"At this point we can add weights to data.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"# If energy is more than 1500 cm⁻¹ weigth is zero\nsetweight_e_more!(fdata, 0, 1500)\n\n# If energy is less than 80 cm⁻¹ weigth is 4\nsetweight_e_less!(fdata,4,80)\nnothing # hide","category":"page"},{"location":"use/#Fitting-Potential-1","page":"Fitting Potential","title":"Fitting Potential","text":"","category":"section"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"We also need to create fitting model. At the current moment only linear models can be used. Here we take normal linear regression, but any linear model supported by ScikitLearn can be used.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"using ScikitLearn\n@sk_import linear_model: LinearRegression\n\nmodel = LinearRegression()\nnothing  # hide","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"To do fitting itself.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"fit_potential!(model, mpp, fdata)","category":"page"},{"location":"use/#Inspecting-Fitted-Potential-1","page":"Fitting Potential","title":"Inspecting Fitted Potential","text":"","category":"section"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"You can inspect the fit by calculating RMSD.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"# Unit is hartree\nrmsd(data[\"Points\"], data[\"Energy\"], mpp)","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"Alternatively you can visualize the fit with various methods.","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"plot_compare(data[\"Points\"][:,1], data[\"Energy\"][:,1], mpp,\n             leg=true, size=(600,300))","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"For more visualizations take a look for","category":"page"},{"location":"use/#","page":"Fitting Potential","title":"Fitting Potential","text":"plot_compare\nscan_compare\nscan_vizualize\nvisualize_points","category":"page"}]
}
